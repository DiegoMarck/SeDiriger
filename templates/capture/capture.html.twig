{% extends 'base.html.twig' %}

{% block body %}
  <h1>Capture Media</h1>
  <div class="capture">
    <button id="startButton">Start Capture</button>
    <video id="video" width="640" height="480" autoplay></video>
    <button id="stopButton">Stop Capture</button>
  </div>
  {% if app.user %}
      {# <a href="{{ path('app_camera_new') }}">Create new</a> #}
  {% endif %}
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  {# <script>
    const startButton = document.getElementById('startCapture');
    const video = document.getElementById('video');
    const captureButton = document.getElementById('capture');

    let stream; // Variable pour stocker le flux vidéo

    startButton.addEventListener('click', () => {
      // Accéder à la caméra de l'appareil
      navigator.mediaDevices
        .getUserMedia({ video: true })
        .then((videoStream) => {
          stream = videoStream;
          video.srcObject = videoStream; // Afficher le flux vidéo dans l'élément vidéo
        })
        .catch((error) => console.error('Error accessing camera:', error));
    });

    captureButton.addEventListener('click', () => {
      // Arrêter le flux vidéo
      if (stream) {
        const tracks = stream.getTracks();
        tracks.forEach((track) => track.stop());
        video.srcObject = null; // Arrêter l'affichage du flux vidéo
      }
    });
  </script> #}
   <script>
    const startButton = document.getElementById('startCapture');
    const stopButton = document.getElementById('stopCapture');
    const video = document.getElementById('video');
    let stream;

    startButton.addEventListener('click', async () => {
      try {
        // Demander l'autorisation d'accéder à la caméra
        stream = await navigator.mediaDevices.getUserMedia({ video: true });
        video.srcObject = stream;
      } catch (error) {
        console.error('Error accessing camera:', error);
      }
    });

    stopButton.addEventListener('click', () => {
      // Arrêter le flux vidéo
      if (stream) {
        const tracks = stream.getTracks();
        tracks.forEach((track) => track.stop());
        video.srcObject = null;
      }
    });
  </script>
{% endblock %}

{% block stylesheets %}
  {{ parent() }}
  <link rel="stylesheet" href="{{ asset('css/capture.css') }}" />
{% endblock %}

